version: '3.8'

services:
  # Receiver service for receiving video processing tasks
  receiver:
    image: lsnow987/receiver:v401 
    environment:
      - RABBITMQ_HOST=192.168.1.6 #192.168.1.2 # RabbitMQ server hostname or IP
      - RABBITMQ_PORT=5672 # RabbitMQ port
      - RABBITMQ_USERNAME=guest # RabbitMQ username
      - RABBITMQ_PASSWORD=guest # RabbitMQ password
      - RABBITMQ_QUEUE_NAME=video-processing-queue # RabbitMQ queue name
      - RABBITMQ_LOGGER_QUEUE_NAME=mongo-log-queue # mongo logs queue name
      - THREAD_COUNT_FOR_FFMPEG=8 # Number of threads for FFmpeg
      - VIDEO_FORMAT=mpegts # Video format for transcoding
      - AUDIO_BITRATE=128 # Bitrate for audio in kbps
      - AUDIO_CODEC=aac # Audio codec for transcoding
      - VIDEO_CODEC=libx264 # Video codec for transcoding
      - 480p_RESOLUTION=854x480 # Resolution for 480p videos
      - 720p_RESOLUTION=1280x720 # Resolution for 720p videos
      - 1080p_RESOLUTION=1920x1080 # Resolution for 1080p videos
      - 480p_BITRATE=1000 # Bitrate for 480p videos in kbps
      - 720p_BITRATE=2500 # Bitrate for 720p videos in kbps
      - 1080p_BITRATE=5000 # Bitrate for 1080p videos in kbps
      - MAX_RETRIES=3 # Maximum number of retries for failed tasks
      - IS_DB_SETUP=false # Flag indicating if database setup is needed
      - MONGODB_HOST=192.168.1.3 # MongoDB server hostname or IP
      - DB_HOST=192.168.1.5 #192.168.1.2
      - DB_PORT=4700
    deploy:
      replicas: 1
    networks:
      - myappnetwork

#   sender:
#     #image: lsnow987/sender:v318
#     image: gpolster/partitioner:v40
#     environment:
#       - RABBITMQ_HOST=192.168.1.3 # RabbitMQ server hostname or IP
#       - RABBITMQ_PORT=5672 # RabbitMQ port
#       - RABBITMQ_USERNAME=guest # RabbitMQ username
#       - RABBITMQ_PASSWORD=guest # RabbitMQ password
#       - RABBITMQ_QUEUE_NAME=video-processing-queue # RabbitMQ queue name
#       - AWS_PUSH_BUCKET=transcoded-video-bucket-1
#       - AWS_PULL_BUCKET=unprocessed-video-bucket-1
#       - AWS_ENDPOINT=http://192.168.1.121:5656
#       - TASK_DELAY=20000
#       - SEGMENT_DURATION=6 # seconds
# #      - VIDEO_PATH=/Users/gadi/YUCS/V3/VideoUpload/DraftDay.mp4 # paste file path here
#       - VIDEO_PATH=/app/GadiTestVideo.mp4
#       #- RABBITMQ_LOGGER_QUEUE_NAME=mongo-log-queue # mongo logs queue name
#       #- IS_DB_SETUP=false # Flag indicating if database setup is needed
#     #- MONGODB_HOST=123.456.789 # MongoDB server hostname or IP
#     deploy:
#       replicas: 1

  # Scaler service for scaling receiver instances based on queue size
  scaler:
    image: lsnow987/scaler:v402
    environment:
      - RABBITMQ_HOST=192.168.1.6 #192.168.1.2 # RabbitMQ server hostname or IP
      - RABBITMQ_PORT=15672 # RabbitMQ management port
      - RABBITMQ_USERNAME=guest # RabbitMQ username
      - RABBITMQ_PASSWORD=guest # RabbitMQ password
      - RABBITMQ_QUEUE_NAME=video-processing-queue # RabbitMQ queue name
      - SCALE_DOWN_THRESHOLD=-2 # Threshold for scaling down
      - SCALE_UP_THRESHOLD=-1 # Threshold for scaling up
      - CONTAINER_NAME=myapp_receiver # Name of the container to scale
      - MAX_INSTANCES_PER_MACHINE=5 # Maximum instances per machine
      #- IP_ADDRESSES=192.168.1.2 # IP addresses for scaling
      - DOCKER_TOKEN="docker swarm join --token SWMTKN-1-12n3zky8x8lddy2rf0sd0kmvyf428nmvemcjxs9absqwe14qbl-cazt19zyj853g8541y6qd5p3o 192.168.1.4:2377" # Docker swarm token for joining
      - DELAY_TIME=35000 # Delay time for scaling
      - SLEEP_TIME=30000 # Sleep time for scaling
    deploy:
      placement:
        constraints:
          - node.role == manager # Deploy only on manager nodes
    ports:
      - "8081:8081" # Expose port for monitoring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket for interaction with Docker API
    networks:
      - myappnetwork
networks:
  myappnetwork:
    driver: overlay